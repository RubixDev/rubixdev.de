{"version":3,"sources":["ts/main.ts","ts/videos.ts"],"names":[],"mappings":"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","file":"videos.1db30363.js","sourceRoot":"../src","sourcesContent":["export function copyText(text: string) {\n    const temp = document.createElement('textarea')\n    temp.innerHTML = text\n    document.body.appendChild(temp)\n    temp.select()\n    temp.setSelectionRange(0, 99999)\n    document.execCommand('copy')\n    document.body.removeChild(temp)\n}\n\nexport function addLoadEvent(func: () => void) {\n    const oldOnLoad: any = window.onload\n    if (typeof window.onload != 'function') {\n        window.onload = func\n    } else {\n        window.onload = function () {\n            if (oldOnLoad) {\n                oldOnLoad(undefined)\n            }\n            func()\n        }\n    }\n}\n\ndeclare global {\n    interface HTMLCollection {\n        entries(): [number, HTMLElement][]\n    }\n}\n\nHTMLCollection.prototype.entries = function () {\n    const out = []\n    for (let i = 0; i < this.length; i++) {\n        out.push([i, this[i]] as [number, HTMLElement])\n    }\n    return out\n}\n\nfunction _addNavbarListItem(list: HTMLUListElement, href: string, html: string) {\n    const listItem = document.createElement('li')\n    const link = document.createElement('a')\n    link.setAttribute('href', href)\n    link.innerHTML = html\n    listItem.appendChild(link)\n    list.appendChild(listItem)\n}\n\nfunction addNavbarListItem(list: HTMLUListElement, href: string, icon: string, text: string) {\n    if (\n        window.location.href.includes('src')\n        || window.location.href.includes('min')\n        || window.location.href.includes('github.io')\n    ) {\n        href = `/${window.location.pathname.split('/')[1]}${href}`\n    }\n    _addNavbarListItem(list, href, `<i class=\"${icon}\"></i><span style=\"vertical-align: middle;\">${text}</span>`)\n}\n\naddLoadEvent(function () {\n    const navbars = document.getElementsByTagName('nav')\n    if (!navbars) {\n        return\n    }\n    const navbar = navbars[0]\n\n    const checkbox = document.createElement('input')\n    checkbox.setAttribute('type', 'checkbox')\n    checkbox.setAttribute('id', 'nav-checkbox')\n    navbar.appendChild(checkbox)\n\n    const navbarList = document.createElement('div')\n    navbarList.setAttribute('id', 'navbar-list')\n    const list = document.createElement('ul')\n\n    addNavbarListItem(\n        list,\n        '/',\n        'fas fa-home',\n        'Home'\n    )\n    addNavbarListItem(\n        list,\n        '/creations',\n        'fas fa-code',\n        'Creations'\n    )\n    addNavbarListItem(\n        list,\n        '/videos',\n        'fas fa-film',\n        'Videos'\n    )\n\n    navbarList.appendChild(list)\n    navbar.appendChild(navbarList)\n\n    const hamburgerLabel = document.createElement('label')\n    hamburgerLabel.setAttribute('for', 'nav-checkbox')\n\n    const hamburgerContent = document.createElement('div')\n    hamburgerContent.setAttribute('id', 'hamburger-content')\n\n    const hamburgerLine = document.createElement('div')\n    hamburgerLine.setAttribute('id', 'hamburger-middle')\n\n    hamburgerContent.appendChild(hamburgerLine)\n    hamburgerLabel.appendChild(hamburgerContent)\n    navbar.appendChild(hamburgerLabel)\n})\n","import { addLoadEvent } from \"./main\";\n\nfunction createButtonsDiv(videoFileName: string, videoYouTubeLink: string) {\n    const divButtons = document.createElement('div')\n    divButtons.setAttribute('class', 'buttons-div')\n\n    const aDownload = document.createElement('a')\n    aDownload.setAttribute('href', `https://downloads.rubixdev.de/videos/${videoFileName}`)\n    aDownload.setAttribute('tabindex', '-1')\n\n    const buttonDownload = document.createElement('button')\n    buttonDownload.setAttribute('class', 'btn btn-small btn-dl btn-hover-light')\n\n    const spanDownload = document.createElement('span')\n    spanDownload.setAttribute('class', 'vertical-align')\n    spanDownload.innerHTML = 'Download'\n\n    buttonDownload.appendChild(spanDownload)\n    aDownload.appendChild(buttonDownload)\n    divButtons.appendChild(aDownload)\n\n    const aYouTube = document.createElement('a')\n    aYouTube.setAttribute('href', videoYouTubeLink)\n    aYouTube.setAttribute('target', '_blank')\n    aYouTube.setAttribute('rel', 'noopener noreferrer')\n    aYouTube.setAttribute('tabindex', '-1')\n\n    const buttonYouTube = document.createElement('button')\n    buttonYouTube.setAttribute('class', 'btn btn-small btn-yt btn-hover-dark')\n\n    const spanYouTube = document.createElement('span')\n    spanYouTube.setAttribute('class', 'vertical-align')\n    spanYouTube.innerHTML = 'Watch'\n\n    buttonYouTube.appendChild(spanYouTube)\n    aYouTube.appendChild(buttonYouTube)\n    divButtons.appendChild(aYouTube)\n\n    return divButtons\n}\n\nfunction createTextDiv(videoDescription: string) {\n    const divText = document.createElement('div')\n    divText.setAttribute('class', 'text-div')\n    divText.innerHTML = videoDescription\n\n    return divText\n}\n\naddLoadEvent(function () {\n    const sections = document.getElementsByClassName('video-section') as HTMLCollection\n    for (let [index, section] of sections.entries()) {\n\n        const videoTitle = (section.getElementsByClassName('title')[0] as HTMLElement).innerText\n        const videoFileName = (section.getElementsByClassName('filename')[0] as HTMLElement).innerText\n        const videoYouTubeLink = (section.getElementsByClassName('yt-link')[0] as HTMLElement).innerText\n        const videoDescription = section.getElementsByClassName('description')[0].innerHTML\n\n        section.innerHTML = ''\n\n        const divDarkerBg = document.createElement('div')\n        divDarkerBg.setAttribute('class', 'darker-bg')\n\n        const h3VideoTitle = document.createElement('h3')\n        h3VideoTitle.setAttribute('class', 'video-title')\n        h3VideoTitle.innerHTML = videoTitle\n\n        divDarkerBg.appendChild(h3VideoTitle)\n\n        const divSplit = document.createElement('div')\n        divSplit.setAttribute('class', 'split big-section')\n\n        if (index % 2 === 0) {\n            divSplit.appendChild(createButtonsDiv(videoFileName, videoYouTubeLink))\n            divSplit.appendChild(createTextDiv(videoDescription))\n        } else {\n            divSplit.appendChild(createTextDiv(videoDescription))\n            divSplit.appendChild(createButtonsDiv(videoFileName, videoYouTubeLink))\n        }\n\n        divDarkerBg.appendChild(divSplit)\n        section.appendChild(divDarkerBg)\n    }\n})\n"]}