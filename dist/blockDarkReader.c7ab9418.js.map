{"version":3,"sources":["ts/blockDarkReader.ts"],"names":[],"mappings":";;;;;;;;AAAA,CAAC,YAAA;AACG;AACA,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAApB;AACA,EAAA,WAAW,CAAC,IAAZ,GAAmB,YAAnB;AACA,EAAA,WAAW,CAAC,OAAZ,GAAsB,KAAtB,CAJH,CAMG;;AACA,MAAM,YAAY,GAAG,SAAf,YAAe,GAAA;AACjB,QAAI,UAAU,GAAG,QAAQ,CAAC,aAAT,CACb,mBAAmB,WAAW,CAAC,OAA/B,GAAyC,IAD5B,CAAjB;;AAGA,QAAI,CAAC,UAAL,EAAiB;AACb,MAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,WAA1B;AACH;;AACD,QAAI,OAAO,GAA2B,QAAQ,CAAC,aAAT,CAClC,gBAAgB,WAAW,CAAC,IAA5B,GAAmC,IADD,CAAtC;;AAGA,QAAI,OAAO,IAAI,OAAO,CAAC,OAAR,IAAmB,WAAW,CAAC,OAA9C,EAAuD;AACnD,MAAA,OAAO,CAAC,MAAR;AACH;AACJ,GAbD,CAPH,CAsBG;;;AACA,MAAM,gBAAgB,GAAG,SAAnB,gBAAmB,GAAA;AACrB;AADqB,+CAED,QAAQ,CAAC,IAAT,CAAc,sBAAd,CAAqC,YAArC,CAFC;AAAA;;AAAA;AAErB,0DAAwE;AAAA,YAA7D,KAA6D;AACpE,QAAA,KAAK,CAAC,MAAN;AACH;AAJoB;AAAA;AAAA;AAAA;AAAA;AAKxB,GALD,CAvBH,CA8BG;;;AACA,MAAM,QAAQ,GAAG,SAAX,QAAW,GAAA;AACb,IAAA,YAAY;AACZ,IAAA,gBAAgB;AACnB,GAHD,CA/BH,CAoCG;;;AACA,MAAM,MAAM,GAAG;AAAE,IAAA,UAAU,EAAE,KAAd;AAAqB,IAAA,SAAS,EAAE,IAAhC;AAAsC,IAAA,OAAO,EAAE;AAA/C,GAAf,CArCH,CAuCG;;AACA,MAAM,QAAQ,GAAG,IAAI,gBAAJ,CAAqB,QAArB,CAAjB;;AAEA,MACI,CAAC,QAAQ,CAAC,aAAT,CAAuB,mBAAmB,WAAW,CAAC,OAA/B,GAAyC,IAAhE,CAAD,IACA,QAAQ,CAAC,aAAT,CAAuB,gBAAgB,WAAW,CAAC,IAA5B,GAAmC,IAA1D,CAFJ,EAGE;AACE,IAAA,OAAO,CAAC,KAAR,CACI,kDADJ,EAEI,0CAFJ,EAGI,4CAHJ,EAII,8EAJJ;AAMH,GAVD,MAUO;AACH;AACA,IAAA,QAAQ,CAAC,OAAT,CAAiB,QAAQ,CAAC,IAA1B,EAAgC,MAAhC,EAFG,CAIH;;AACA,IAAA,QAAQ;AACX;AACJ,CA3DD","file":"blockDarkReader.c7ab9418.js","sourceRoot":"../src","sourcesContent":["(function () {\n    // Fake html meta tag to disable darkreader.\n    const fakeMetaTag = document.createElement(\"meta\")\n    fakeMetaTag.name = \"darkreader\"\n    fakeMetaTag.content = \"off\"\n\n    // Alter the real metatag with the fake one.\n    const alterMetaTag = function () {\n        let correctTag = document.querySelector(\n            'meta[content=\"' + fakeMetaTag.content + '\"]'\n        )\n        if (!correctTag) {\n            document.head.appendChild(fakeMetaTag)\n        }\n        let realTag: HTMLMetaElement | null = document.querySelector(\n            'meta[name=\"' + fakeMetaTag.name + '\"]'\n        )\n        if (realTag && realTag.content != fakeMetaTag.content) {\n            realTag.remove()\n        }\n    }\n\n    // Remove all Darkreader style tags form `document.head`.\n    const removeDarkreader = function () {\n        // NOTE: use traditional 'for loops' for IE 11\n        for (const style of document.head.getElementsByClassName(\"darkreader\")) {\n            style.remove()\n        }\n    }\n\n    // Observing callback function.\n    const callback = function () {\n        alterMetaTag()\n        removeDarkreader()\n    }\n\n    // Options for the observer (which mutations to observe).\n    const config = { attributes: false, childList: true, subtree: false }\n\n    // Create an observer instance linked to the callback function.\n    const observer = new MutationObserver(callback)\n\n    if (\n        !document.querySelector('meta[content=\"' + fakeMetaTag.content + '\"]') &&\n        document.querySelector('meta[name=\"' + fakeMetaTag.name + '\"]')\n    ) {\n        console.error(\n            \"Please add the line bellow to your index.html:\\n\",\n            '<meta name=\"darkreader\" content=\"off\">\\n',\n            \"or you may encounter performance issues!\\n\",\n            \"\\nplease take a look at: https://github.com/hadialqattan/no-darkreader#usage\"\n        )\n    } else {\n        // Start observing the target node for configured mutations.\n        observer.observe(document.head, config)\n\n        // Execute for the fist time to take effect.\n        callback()\n    }\n})()\n"]}