{"version":3,"sources":["ts/blockDarkReader.ts"],"names":[],"mappings":";AAAA,aAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,IAAA,EAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,GAAA,iBAAA,EAAA,OAAA,CAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,KAAA,IAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,WAEU,IAAA,EAAc,SAAS,cAAc,QAC3C,EAAY,KAAO,aACnB,EAAY,QAAU,MAGhB,IAwBA,EAAW,YAxBI,WACA,SAAS,cACtB,iBAAmB,EAAY,QAAU,OAGzC,SAAS,KAAK,YAAY,GAE1B,IAAA,EAAkC,SAAS,cAC3C,cAAgB,EAAY,KAAO,MAEnC,GAAW,EAAQ,SAAW,EAAY,SAC1C,EAAQ,SAcZ,GATqB,WAED,IAFC,EAED,EAAA,EAAA,SAAS,KAAK,uBAAuB,eAFpC,IAEmD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,EAAA,MAC9D,SAHW,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAUrB,IAOE,EAAW,IAAI,iBAAiB,IAGjC,SAAS,cAAc,iBAAmB,EAAY,QAAU,OACjE,SAAS,cAAc,cAAgB,EAAY,KAAO,MAE1D,QAAQ,MACJ,mDACA,2CACA,6CACA,iFAIJ,EAAS,QAAQ,SAAS,KAjBf,CAAE,YAAY,EAAO,WAAW,EAAM,SAAS,IAoB1D,KAzDR","file":"blockDarkReader.47bd824c.js","sourceRoot":"../src","sourcesContent":["(function () {\n    // Fake html meta tag to disable darkreader.\n    const fakeMetaTag = document.createElement(\"meta\")\n    fakeMetaTag.name = \"darkreader\"\n    fakeMetaTag.content = \"off\"\n\n    // Alter the real metatag with the fake one.\n    const alterMetaTag = function () {\n        let correctTag = document.querySelector(\n            'meta[content=\"' + fakeMetaTag.content + '\"]'\n        )\n        if (!correctTag) {\n            document.head.appendChild(fakeMetaTag)\n        }\n        let realTag: HTMLMetaElement | null = document.querySelector(\n            'meta[name=\"' + fakeMetaTag.name + '\"]'\n        )\n        if (realTag && realTag.content != fakeMetaTag.content) {\n            realTag.remove()\n        }\n    }\n\n    // Remove all Darkreader style tags form `document.head`.\n    const removeDarkreader = function () {\n        // NOTE: use traditional 'for loops' for IE 11\n        for (const style of document.head.getElementsByClassName(\"darkreader\")) {\n            style.remove()\n        }\n    }\n\n    // Observing callback function.\n    const callback = function () {\n        alterMetaTag()\n        removeDarkreader()\n    }\n\n    // Options for the observer (which mutations to observe).\n    const config = { attributes: false, childList: true, subtree: false }\n\n    // Create an observer instance linked to the callback function.\n    const observer = new MutationObserver(callback)\n\n    if (\n        !document.querySelector('meta[content=\"' + fakeMetaTag.content + '\"]') &&\n        document.querySelector('meta[name=\"' + fakeMetaTag.name + '\"]')\n    ) {\n        console.error(\n            \"Please add the line bellow to your index.html:\\n\",\n            '<meta name=\"darkreader\" content=\"off\">\\n',\n            \"or you may encounter performance issues!\\n\",\n            \"\\nplease take a look at: https://github.com/hadialqattan/no-darkreader#usage\"\n        )\n    } else {\n        // Start observing the target node for configured mutations.\n        observer.observe(document.head, config)\n\n        // Execute for the fist time to take effect.\n        callback()\n    }\n})()\n"]}